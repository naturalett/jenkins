<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1268.v6eb_e2ee1a_85a">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3606.v0b_d8b_e512dcf">
    <script>import groovy.transform.Field
@Field String customImage, publicIP

pipeline {
    agent {
        docker {
            image &apos;docker:19.03.12&apos;
            args &apos;-v /var/run/docker.sock:/var/run/docker.sock&apos;
        }
    }
    stages {
        stage(&apos;Clone&apos;) {
            steps {
                deleteDir()

                git branch: &apos;main&apos;, url: &apos;https://github.com/naturalett/jenkins.git&apos;
            }
        }
        stage(&apos;Initialization&apos;) {
            steps {
              script {
                docker.image(&apos;alpine&apos;).inside {
                    sh &quot;&quot;&quot;
                    apk add curl
                    curl http://checkip.amazonaws.com &gt; publicIP&quot;&quot;&quot;.trim()
                }
                publicIP = readFile(&apos;publicIP&apos;).trim()
              }
            }
        }
        stage(&apos;Build&apos;) {
            steps {
              script {
                dir(&apos;Application/&apos;) {
                  customImage = docker.build(&quot;naturalett/hello-world:${env.BUILD_ID}&quot;)
                }
              }
            }
        }
        stage(&apos;Deploy&apos;) {
            steps {
                sh &quot;docker run -it --name python-hello-world-${env.BUILD_ID} -d -p81:81 naturalett/hello-world:${env.BUILD_ID}&quot;
                echo &quot;Check you deployment in the following link: http://${publicIP}:81/home&quot;
                sleep 60
            }
        }
        stage(&apos;CleanUp&apos;) {
            steps {
                sh &quot;docker stop python-hello-world-${env.BUILD_ID} &amp;&amp; docker rm python-hello-world-${env.BUILD_ID}&quot;
            }
        }
    }
    post {
        success {
            script {
                currentBuild.description = &quot;Passed successfully!&quot;
            }
        }
    }
}
</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>